1. 发布者类，订阅者类，发布者订阅者管理者类。

管理者类通过一个全局容器 map<string,publisher_base>，管理着所有以type（string)区分的发布者实例集，每个type只能存在一个实例。

管理者类，提供创建发布者接口，需要发布者类型参数。创建订阅者接口，需要发布者类型参数，订阅者名，所属发布者实例指针。

新建的发布者存在于全局容器中，新建的订阅者存储在某个type的发布者实例中，发布者实例以set存此他们。以name区分各个订阅者实例。

每个订阅者实例真正存储着数据队列，以queue存储。发布者写时，给set中每个发布者实例数据成员写数据，订阅器读数据时，从队列中取出数据。

2.传感器类，算法类，传感器管理者类（工厂类），算法管理类（工厂类）

传感器类实例时，绑定特定类型的发布者。有统一的基类接口，可统一遍历调用。

传感器工厂类，用全局map<string,CSensor*>管理所有创建的传感器实例，map<string,thread>存储每个传感器实例相关的线程实例，线程处理函数接受特定传感器实例指针，用来调用传感器发布数据。
其同时提供管理函数，如开启，停止，创建接口。

算法类
每个算法类实例时，会读取该算法配置文件，遍历发布者类别配置，遍历创建命名的该类别发布者的订阅者实例。
并包含统一的接口，start（开启线程读取对应type 发布的数据），和stop，供算法管理者类统一调用。

算法管理类
读取配置的算法，创建每个独立的算法实例对象，调用其总共接口，开启，关闭算法（即开启数据处理）

3. 类基本继承关系

publisher_base  publiser
subscriber_base subscriber

CSensor   CImu  CImuDemo
CSensorFactory

CAlg_base  CAlg1
	  CDataStore
CAlgFactory




